plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.1'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.springdoc.openapi-gradle-plugin' version '1.8.0'
}

group = 'sg.wlian'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

openApi {
    apiDocsUrl.set("http://localhost:5456/api-docs")
    outputDir.set(file("./build/generated/openapi"))
    outputFileName.set("openapi.json")
    customBootRun {
        args.set(["--spring.profiles.active=dev", "--server.port=5456"])
    }
}

tasks.register('cleanDocs', Delete) {
    delete fileTree("$rootDir/build/generated/openapi") {
        include '**/*'
    }
}

tasks.named('generateOpenApiDocs') {
    dependsOn 'cleanDocs'
}


dependencies {
    annotationProcessor 'org.projectlombok:lombok'
    compileOnly 'org.projectlombok:lombok'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.liquibase:liquibase-core'
    implementation 'org.springframework.data:spring-data-rest-hal-explorer'
    runtimeOnly 'com.mysql:mysql-connector-j'


    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}